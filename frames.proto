//
// Copyright (c) 2024â€“2025, Daily
//
// SPDX-License-Identifier: BSD 2-Clause License
//

// Generate frames_pb2.py with:
//
//   python -m grpc_tools.protoc --proto_path=./ --python_out=./protobufs frames.proto

syntax = "proto3";

package pipecat;

// Frame message structure
message Frame {
  oneof data {
    AudioFrame audio = 1;
    TextFrame text = 2;
    TranscriptionFrame transcription = 3;
    MessageFrame message = 4;
    StartInterruptionFrame start_interruption = 5;
  }
}

// Audio frame structure
message AudioFrame {
  uint64 id = 1;
  string name = 2;
  bytes audio = 3;
  int32 sample_rate = 4;
  int32 num_channels = 5;
  string text = 6; // Optional text associated with audio
}

// Text frame structure
message TextFrame {
  string text = 1;
  string user_id = 2;
  string timestamp = 3;
}

// Transcription frame structure
message TranscriptionFrame {
  string text = 1;
  string user_id = 2;
  string timestamp = 3;
}

// Generic message frame
message MessageFrame {
  string type = 1;
  string content = 2;
  string timestamp = 3;
}

// Interruption frame to signal when to interrupt the AI
message StartInterruptionFrame {
  string user_id = 1;
  string timestamp = 2;
}

message Audio {
  repeated uint32 audio = 1;
  uint32 sample_rate = 2;
  uint32 num_channels = 3;
}

message Transcription {
  string text = 1;
  string speaker = 2;  // "user" or "ai"
  bool is_final = 3;
}

message AISpeech {
  string text = 1;
  bool is_final = 2;
}
